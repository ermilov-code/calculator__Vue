{"ast":null,"code":"import \"core-js/modules/es.math.trunc.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: {\n      type: String,\n      default: \"Empty Props\",\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      message: \"Hello Vue\",\n      operand1: 0,\n      operand2: 0,\n      result: 0\n    };\n  },\n  methods: {\n    doThat: function doThat(str, evnt) {\n      console.log(\"click\", str, evnt);\n    },\n    onValidate: function onValidate() {\n      console.log(\"validation true\");\n    },\n    divide: function divide(op1, op2) {\n      this.result = op1 / op2;\n    },\n    multyply: function multyply() {\n      var operand1 = this.operand1,\n          operand2 = this.operand2;\n      this.result = operand1 * operand2;\n    },\n    // возводит число в заданную степень\n    exponentiation: function exponentiation(op1, op2) {\n      this.result = Math.pow(op1, op2);\n    },\n    integerDivision: function integerDivision(op1, op2) {\n      var intResult = op1 / op2;\n      this.result = Math.trunc(intResult);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACAA,oBADA;AAEAC;AACAC;AACAC,kBADA;AAEAC,4BAFA;AAGAC;AAHA;AADA,GAFA;AASAC,MATA,kBASA;AACA;AACAC,0BADA;AAEAC,iBAFA;AAGAC,iBAHA;AAIAC;AAJA;AAMA,GAhBA;AAiBAC;AACAC,UADA,kBACAC,GADA,EACAC,IADA,EACA;AACAC;AACA,KAHA;AAIAC,cAJA,wBAIA;AACAD;AACA,KANA;AAOAE,UAPA,kBAOAC,GAPA,EAOAC,GAPA,EAOA;AACA;AACA,KATA;AAUAC,YAVA,sBAUA;AACA;AAAA;AACA;AACA,KAbA;AAcA;AACAC,kBAfA,0BAeAH,GAfA,EAeAC,GAfA,EAeA;AACA;AACA,KAjBA;AAkBAG,mBAlBA,2BAkBAJ,GAlBA,EAkBAC,GAlBA,EAkBA;AACA;AACA;AACA;AArBA;AAjBA","names":["name","props","msg","type","default","required","data","message","operand1","operand2","result","methods","doThat","str","evnt","console","onValidate","divide","op1","op2","multyply","exponentiation","integerDivision"],"sourceRoot":"src/components","sources":["HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n\n    <!-- <hr /> -->\n\n    <div class=\"display\">\n      <input v-model.number=\"operand1\" type=\"number\" />\n      <input v-model.number=\"operand2\" type=\"number\" />\n\n      <p class=\"result\">{{ result }}</p>\n    </div>\n    <div class=\"keyboard\">\n      <button v-on:click=\"result = operand1 + operand2\">+</button>\n      <button @click=\"result = operand1 - operand2\">-</button>\n      <button @click=\"divide(operand1, operand2)\">/</button>\n      <button @click=\"multyply\">*</button>\n      <button @click=\"exponentiation(operand1, operand2)\">x²</button>\n      <button @click=\"exponentiation(operand1, operand2)\">integer</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: {\n      type: String,\n      default: \"Empty Props\",\n      required: true,\n    },\n  },\n  data() {\n    return {\n      message: \"Hello Vue\",\n      operand1: 0,\n      operand2: 0,\n      result: 0,\n    };\n  },\n  methods: {\n    doThat(str, evnt) {\n      console.log(\"click\", str, evnt);\n    },\n    onValidate() {\n      console.log(\"validation true\");\n    },\n    divide(op1, op2) {\n      this.result = op1 / op2;\n    },\n    multyply() {\n      const { operand1, operand2 } = this;\n      this.result = operand1 * operand2;\n    },\n    // возводит число в заданную степень\n    exponentiation(op1, op2) {\n      this.result = Math.pow(op1, op2);\n    },\n    integerDivision(op1, op2) {\n      let intResult = op1 / op2;\n      this.result = Math.trunc(intResult);\n    }\n\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.hello {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\nbutton {\n  width: 40px;\n  height: 30px;\n  margin: 15px;\n}\ninput {\n  padding: 8px;\n  margin: 5px;\n}\n.result {\n  font-size: 25px;\n  width: 100%;\n  text-align: center;\n  border: 2px solid black;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}