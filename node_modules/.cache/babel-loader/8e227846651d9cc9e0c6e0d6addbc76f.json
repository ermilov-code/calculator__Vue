{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACAA,oBADA;AAEAC;AACAC;AADA;AAFA","names":["name","props","msg"],"sourceRoot":"src/components","sources":["HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n\n    {{ msg.length }}\n\n    <!-- допустим у нас есть некая строка hello - \n    что можно делать в рамках вывода переменной - вы можете спокойно вывести длину {{ msg.length }} - можете делать джоины и преобразования - все что угодно - можно сделать это напрямую - но есть более лакончиынй способ - называется computed\n    Чем отличаются metods от computed - (и вотч) -->\n\n    <hr />\n    <!-- <button v-on:click=\"doThat('hello', $event)\">Отправить</button>\n    <button @click=\"doThat('hello', $event)\">Закрыть</button> -->\n    <!-- когда убирается фокус с input - будем проверять наше значение - \n    focus когда что-то принимает - blur -->\n    <!-- <input type=\"text\" @blur=\"onValidate\" /> -->\n\n    <!-- в реакте - как сделать реактивным значением -->\n    <!-- что такое директива v-model= - связывает значение вашей data с реальным значением input - как только в input поменяется значение в data тоже сразу меняется значение НО! что происходит на самом деле - на самом деле v-model скрывает под собой следующее  -->\n    <!-- есть вторая директива которая назфывается вбайнд - она связывает биндит значение из вашего data -->\n\n    <div class=\"display\">\n      <input v-model.number=\"operand1\" type=\"number\" />\n      <!-- <input v-model.lazy=\"operand2\" type=\"number\" /> -->\n      <!-- <input v-model.trim=\"operand2\" type=\"text\" /> -->\n      <input v-model.number=\"operand2\" type=\"number\" />\n\n      = {{ result }}\n    </div>\n    <div class=\"keyboard\">\n      <button v-on:click=\"result = operand1 + operand2\">+</button>\n      <button @click=\"result = operand1 - operand2\">-</button>\n      <button @click=\"divide(operand1, operand2)\">/</button>\n      <button @click=\"multyply\">*</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}